{"ast":null,"code":"var _jsxFileName = \"/Users/ntommy/Projects/wisesaying/components/nav/StackNavFactory.js\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Today from \"../../screens/Today\";\nimport Profile from \"../../screens/Profile\";\nimport MyProfile from \"../../screens/MyProfile\";\nimport Search from \"../../screens/Search\";\nimport { useColorScheme } from \"react-native-appearance\";\nimport Create from \"../../screens/Create\";\nimport SayingList from \"../../screens/SayingList\";\nimport Saying from \"../../screens/Saying\";\nimport { colors } from \"../../colors\";\nvar Stack = createStackNavigator();\nexport default function StackNavFactory(_ref) {\n  var _this = this;\n\n  var screenName = _ref.screenName;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var colorScheme = useColorScheme();\n  var darkmode = colorScheme === \"dark\";\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"screen\",\n    screenOptions: {\n      headerBackTitleVisible: false,\n      headerTintColor: colorScheme === \"dark\" ? \"white\" : \"black\",\n      headerStyle: {\n        shadowColor: colorScheme === \"dark\" ? \"rgba(255,255,255,0.2)\" : \"#dedede\",\n        backgroundColor: colorScheme === \"dark\" ? colors.darker : \"white\",\n        height: 80\n      },\n      cardStyle: {\n        backgroundColor: darkmode ? colors.darker : \"white\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, screenName === \"Today\" ? React.createElement(Stack.Screen, {\n    name: \"Today\",\n    component: Today,\n    options: {\n      headerTitle: function headerTitle() {\n        return React.createElement(Image, {\n          resizeMode: \"contain\",\n          source: require(\"../../assets/logo2.png\"),\n          style: {\n            maxHeight: 30\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }\n  }) : null, screenName === \"Search\" ? React.createElement(Stack.Screen, {\n    name: \"Search\",\n    component: Search,\n    options: {\n      headerBackTitleVisible: false,\n      headerTintColor: colorScheme === \"dark\" ? \"white\" : \"black\",\n      headerStyle: {\n        shadowColor: 'transparent',\n        backgroundColor: colorScheme === \"dark\" ? colors.darker : \"white\",\n        height: 150\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }\n  }) : null, screenName === \"Create\" ? React.createElement(Stack.Screen, {\n    name: \"Create\",\n    component: Create,\n    options: {\n      title: \"작성하기\",\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        fontSize: 24\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }\n  }) : null, screenName === \"MyProfile\" ? React.createElement(Stack.Screen, {\n    name: \"MyProfile\",\n    component: MyProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 31\n    }\n  }) : null, React.createElement(Stack.Screen, {\n    name: \"SayingList\",\n    component: SayingList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Saying\",\n    component: Saying,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ntommy/Projects/wisesaying/components/nav/StackNavFactory.js"],"names":["createStackNavigator","React","Today","Profile","MyProfile","Search","useColorScheme","Create","SayingList","Saying","colors","Stack","StackNavFactory","screenName","useWindowDimensions","width","height","colorScheme","darkmode","headerBackTitleVisible","headerTintColor","headerStyle","shadowColor","backgroundColor","darker","cardStyle","headerTitle","require","maxHeight","title","headerTitleStyle","fontWeight","fontSize","headerShown"],"mappings":"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","sourcesContent":["import { createStackNavigator } from \"@react-navigation/stack\";\nimport React from \"react\";\nimport { Image, useWindowDimensions } from \"react-native\";\nimport Today from \"../../screens/Today\";\nimport Profile from \"../../screens/Profile\";\nimport MyProfile from \"../../screens/MyProfile\";\nimport Search from \"../../screens/Search\";\nimport { useColorScheme } from \"react-native-appearance\";\nimport Create from \"../../screens/Create\";\nimport SayingList from \"../../screens/SayingList\";\nimport Saying from \"../../screens/Saying\";\nimport { colors } from \"../../colors\";\n\nconst Stack = createStackNavigator();\n\nexport default function StackNavFactory({screenName}){\n  const {width, height} = useWindowDimensions();\n  const colorScheme = useColorScheme();\n  const darkmode = colorScheme===\"dark\";\n  return <Stack.Navigator \n    mode=\"card\" \n    headerMode=\"screen\" \n    screenOptions={{\n      headerBackTitleVisible: false,\n      headerTintColor: colorScheme===\"dark\"?\"white\":\"black\",\n      headerStyle:{\n        shadowColor: colorScheme===\"dark\"?\"rgba(255,255,255,0.2)\":\"#dedede\",\n        backgroundColor: colorScheme===\"dark\"?colors.darker:\"white\",\n        height: 80,\n      },\n      cardStyle:{\n        backgroundColor: darkmode?colors.darker:\"white\", // <- 중요! 스택 스크린 렌더링 전 기본 배경값 지정. 이걸 안하면 로드 시 처음에 껌뻑거릴 수 있다. \n      }\n  }}>\n    {screenName===\"Today\"?<Stack.Screen name={\"Today\"} component={Today} options={{\n      headerTitle: ()=><Image resizeMode=\"contain\" source={require(\"../../assets/logo2.png\")} style={{\n        maxHeight: 30,\n      }}/>\n    }}/>:null}\n    {screenName===\"Search\"?<Stack.Screen name={\"Search\"} component={Search} options={{\n      headerBackTitleVisible: false,\n      headerTintColor: colorScheme===\"dark\"?\"white\":\"black\",\n      headerStyle:{\n        shadowColor: 'transparent',\n        backgroundColor: colorScheme===\"dark\"?colors.darker:\"white\",\n        height: 150,\n      }\n      }}/>:null}\n    {screenName===\"Create\"?<Stack.Screen name={\"Create\"} component={Create} options={{\n      title: \"작성하기\",\n      headerTitleStyle:{\n        fontWeight: 'bold',\n        fontSize: 24\n      }\n    }}/>:null}\n    {screenName===\"MyProfile\"?<Stack.Screen name={\"MyProfile\"} component={MyProfile}/>:null}\n    <Stack.Screen name=\"SayingList\" component={SayingList}/>\n    <Stack.Screen  name=\"Saying\" component={Saying} options={{headerShown:false}}/>\n    <Stack.Screen name=\"Profile\" component={Profile} />\n  </Stack.Navigator>\n}"]},"metadata":{},"sourceType":"module"}