{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _jsxFileName = \"/Users/ntommy/Projects/wisesaying/components/SayingSmall.js\",\n    _templateObject;\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { createContext } from 'react';\nimport { useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useColorScheme } from 'react-native-appearance';\nimport styled from \"styled-components/native\";\nimport { Ionicons } from '@expo/vector-icons';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { useNavigation } from '@react-navigation/native';\nvar ss = StyleSheet.create({\n  container: function container(colorScheme) {\n    return {\n      flex: 1,\n      borderWidth: 1,\n      backgroundColor: colorScheme === \"dark\" ? \"rgba(255,255,255,0.1)\" : \"white\",\n      width: \"85%\",\n      borderRadius: 20,\n      maxHeight: 500,\n      marginVertical: 30,\n      minHeight: 300\n    };\n  },\n  body: {\n    flex: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  sayingText: function sayingText(colorScheme) {\n    return {\n      color: \"\" + (colorScheme === \"dark\" ? \"white\" : \"black\"),\n      fontSize: 18\n    };\n  },\n  author: function author(colorScheme) {\n    return {\n      color: \"\" + (colorScheme === \"dark\" ? \"#ababab\" : \"#323232\"),\n      fontSize: 14\n    };\n  },\n  comment: {\n    marginLeft: 10,\n    marginRight: 10,\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  likes: {\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nfunction Tag(_ref) {\n  var id = _ref.id,\n      name = _ref.name;\n  console.log(id, name);\n  return React.createElement(TouchableOpacity, {\n    style: {\n      borderWidth: 0,\n      borderRadius: 15,\n      paddingVertical: 5,\n      paddingHorizontal: 10,\n      marginLeft: 5,\n      marginBottom: 15,\n      backgroundColor: \"#eeeeee\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#464646\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, name));\n}\n\nvar TOGGLE_LIKE = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation toggleLike($id:Int!){\\n    toggleLike(id: $id){\\n      ok\\n      error \\n    }\\n  }\\n\"])));\nexport default function Saying(_ref2) {\n  var _this = this;\n\n  var id = _ref2.id,\n      user = _ref2.user,\n      text = _ref2.text,\n      tags = _ref2.tags,\n      author = _ref2.author,\n      isLike = _ref2.isLike,\n      isMine = _ref2.isMine,\n      totalLikes = _ref2.totalLikes,\n      totalComments = _ref2.totalComments;\n  console.log(\"Saying::text=\", text);\n  var navigation = useNavigation();\n  var colorScheme = useColorScheme();\n  var textColor = colorScheme === \"dark\" ? \"#fff\" : \"#000\";\n\n  var _useMutation = useMutation(TOGGLE_LIKE, {\n    variables: {\n      id: id\n    },\n    update: function update(cache, _ref3) {\n      var ok = _ref3.data.toggleLike.ok;\n      console.log(\"ok=\", ok);\n\n      if (ok) {\n        var target = \"Saying:\" + id;\n        cache.modify({\n          id: target,\n          fields: {\n            isLike: function isLike(prev) {\n              return !prev;\n            },\n            totalLikes: function totalLikes(prev) {\n              if (isLike) return prev - 1;else return prev + 1;\n            }\n          }\n        });\n      }\n    },\n    onCompleted: function onCompleted(data) {\n      return console.log(data);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      toggleLike = _useMutation2[0];\n\n  return React.createElement(View, {\n    style: ss.container(colorScheme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: ss.body,\n    onPress: function onPress() {\n      return navigation.navigate(\"Saying\", {\n        sid: id\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingVertical: 30,\n      paddingHorizontal: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: ss.sayingText(colorScheme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, text)), React.createElement(TouchableOpacity, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: ss.author(colorScheme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, author.name))), React.createElement(View, {\n    style: {\n      borderWidth: 1,\n      borderStyle: \"dashed\",\n      alignItems: \"center\",\n      paddingHorizontal: 10,\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: ss.likes,\n    onPress: toggleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: isLike ? \"heart\" : \"heart-outline\",\n    size: 30,\n    color: isLike ? \"tomato\" : textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: textColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, totalLikes)), React.createElement(TouchableOpacity, {\n    style: ss.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chatbox-outline\",\n    size: 30,\n    color: textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: textColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, totalComments)), tags.map(function (item, index) {\n    return React.createElement(Tag, _extends({\n      key: index\n    }, item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 36\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/ntommy/Projects/wisesaying/components/SayingSmall.js"],"names":["React","useState","createContext","useEffect","useColorScheme","styled","Ionicons","gql","useMutation","useNavigation","ss","StyleSheet","create","container","colorScheme","flex","borderWidth","backgroundColor","width","borderRadius","maxHeight","marginVertical","minHeight","body","justifyContent","alignItems","sayingText","color","fontSize","author","comment","marginLeft","marginRight","borderStyle","likes","Tag","id","name","console","log","paddingVertical","paddingHorizontal","marginBottom","TOGGLE_LIKE","Saying","user","text","tags","isLike","isMine","totalLikes","totalComments","navigation","textColor","variables","update","cache","ok","data","toggleLike","target","modify","fields","prev","onCompleted","navigate","sid","flexDirection","map","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { createContext } from 'react';\nimport { useEffect } from 'react';\nimport { Image, Text, useWindowDimensions, View, StyleSheet,TouchableOpacity, Platform } from 'react-native';\nimport { useColorScheme } from 'react-native-appearance';\nimport styled from \"styled-components/native\";\nimport { Ionicons } from '@expo/vector-icons';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { useNavigation } from '@react-navigation/native';\n\n\nconst ss = StyleSheet.create({\n  container: colorScheme=>({\n    flex: 1,\n    borderWidth: 1,\n    backgroundColor: colorScheme===\"dark\"?\"rgba(255,255,255,0.1)\":\"white\",\n    width: \"85%\",\n    borderRadius: 20,\n    maxHeight: 500,\n    marginVertical: 30,\n    minHeight: 300,\n    /*...Platform.select({\n      ios: {\n        shadowColor: '#000',\n        shadowOffset: {width:2, height: -1},\n        shadowOpacity: 0.3,\n      },\n      android:{\n        elevation: 1\n      }\n    }),*/\n  }),\n  body:{\n    flex:8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  sayingText:colorScheme=>({\n    color: `${colorScheme===\"dark\"?\"white\":\"black\"}`,\n    fontSize: 18,\n  }),\n  author: colorScheme=>({\n    color: `${colorScheme===\"dark\"?\"#ababab\":\"#323232\"}`\t,\n    fontSize: 14,\n  }),\n  comment:{\n    marginLeft: 10,\n    marginRight: 10,\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  likes:{\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n})\n\nfunction Tag({id, name}){\n  console.log(id, name);\n  return (\n    <TouchableOpacity style={{\n      borderWidth: 0,\n      borderRadius: 15,\n      paddingVertical: 5,\n      paddingHorizontal: 10,\n      marginLeft: 5,\n      marginBottom: 15,\n      backgroundColor: \"#eeeeee\",\n      \n    }}>\n      <Text style={{color:\"#464646\"}}>{name}</Text>\n    </TouchableOpacity>\n  )\n}\n\nconst TOGGLE_LIKE = gql`\n  mutation toggleLike($id:Int!){\n    toggleLike(id: $id){\n      ok\n      error \n    }\n  }\n`\n\nexport default function Saying({id, user, text, tags, author, isLike, isMine, totalLikes, totalComments}){\n  console.log(\"Saying::text=\",text);\n  const navigation = useNavigation();\n  //const {id, user, text, tags, author, isLike, isMine, totalLikes, totalComments} = data.seeSaying;\n  //console.log(\"data:\",data)\n  const colorScheme = useColorScheme();\n  \n  const textColor = colorScheme===\"dark\"?\"#fff\":\"#000\";\n\n\n  const [toggleLike] = useMutation(TOGGLE_LIKE,{\n    variables:{\n      id,\n    },\n    update: (cache, { data:{toggleLike:{ok}}})=>{\n      console.log(\"ok=\",ok);\n      if(ok){\n        const target = `Saying:${id}`; // 수정할 대상을 지정\n        cache.modify({\n          id: target,\n          fields:{\n            isLike(prev){\n              return !prev;\n            },\n            totalLikes(prev){\n              if (isLike) return prev-1;\n              else return prev+1;\n            },\n          },\n        });\n      }\n    },\n    onCompleted:(data)=>console.log(data),\n  });\n  return(\n    <View style={ss.container(colorScheme)}>\n      <TouchableOpacity style={ss.body} onPress={()=>navigation.navigate(\"Saying\",{\n        sid: id,\n      })}>\n        <View style={{\n\n          paddingVertical: 30, \n          paddingHorizontal:20}}>\n          <Text style={ss.sayingText(colorScheme)}>{text}</Text>\n        </View>\n        <TouchableOpacity style={{\n\n        }}>\n          <Text style={ss.author(colorScheme)}>{author.name}</Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n      <View style={{\n          borderWidth: 1,\n          borderStyle: \"dashed\",\n          alignItems:\"center\",\n          paddingHorizontal: 10,\n          flex: 1,\n          flexDirection: 'row'\n        }}>\n          <TouchableOpacity style={ss.likes} onPress={toggleLike}>\n            <Ionicons \n              name={isLike?\"heart\":\"heart-outline\" }\n              size={30} \n              color={isLike?\"tomato\":textColor}/>\n            <Text style={{\n              color:textColor\n            }}>{totalLikes}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={ss.comment}>\n            <Ionicons name=\"chatbox-outline\" size={30} color={textColor}/>\n            <Text style={{\n              color:textColor\n            }}>{totalComments}</Text>\n          </TouchableOpacity>\n          {\n            tags.map((item,index)=><Tag key={index} {...item}/>)\n          }\n        </View>\n    </View>\n  )\n}\n\n/*\n    <Container>\n      <Body>\n        <SayingText>\n          ${text}\n        </SayingText>\n      </Body>\n      <Footer>\n        <Action>\n        </Action>\n        <Action>\n\n        </Action>\n        <Tags>\n\n        </Tags>\n        <User>\n          ${user.username}\n        </User>\n      </Footer>\n    </Container>\n*/"]},"metadata":{},"sourceType":"module"}