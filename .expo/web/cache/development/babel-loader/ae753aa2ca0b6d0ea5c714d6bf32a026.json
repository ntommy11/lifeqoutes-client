{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _jsxFileName = \"/Users/ntommy/Projects/wisesaying/screens/Today.js\";\n\nimport { useQuery } from '@apollo/client';\nimport { NavigationHelpersContext } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { logUserOut } from \"../apollo\";\nimport Saying from \"../components/Saying\";\nimport ScreenLayout from \"../components/ScreenLayout\";\nvar TODAY_QUERY = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query seeSaying($id:Int!){\\n    seeSaying(id:$id){\\n      id\\n      text \\n      user{\\n        name\\n        email\\n      }\\n      author{\\n        id\\n        name\\n      }\\n      tags{\\n        id\\n        name\\n      }\\n      totalLikes\\n      totalComments\\n      isMine\\n      isLike\\n    }\\n  }\\n\"])));\nexport default function Today(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useQuery = useQuery(TODAY_QUERY, {\n    variables: {\n      id: 1\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data) {\n    console.log(data);\n    return React.createElement(ScreenLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, React.createElement(Saying, _extends({}, data.seeSaying, {\n      today: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  return React.createElement(ScreenLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }, React.createElement(ActivityIndicator, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ntommy/Projects/wisesaying/screens/Today.js"],"names":["useQuery","NavigationHelpersContext","gql","React","logUserOut","Saying","ScreenLayout","TODAY_QUERY","Today","navigation","variables","id","data","loading","error","console","log","seeSaying"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,wBAAT,QAAyC,wBAAzC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,UAAT;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP;AAGA,IAAMC,WAAW,GAAGL,GAAH,6XAAjB;AAyBA,eAAe,SAASM,KAAT,OAA4B;AAAA,MAAZC,UAAY,QAAZA,UAAY;;AAAA,kBACRT,QAAQ,CAACO,WAAD,EAAa;AACpDG,IAAAA,SAAS,EAAC;AACRC,MAAAA,EAAE,EAAE;AADI;AAD0C,GAAb,CADA;AAAA,MACjCC,IADiC,aACjCA,IADiC;AAAA,MAC3BC,OAD2B,aAC3BA,OAD2B;AAAA,MAClBC,KADkB,aAClBA,KADkB;;AAMzC,MAAGA,KAAH,EAAS;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,MAAGF,IAAH,EAAQ;AACNG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD,eAAYA,IAAI,CAACK,SAAjB;AAA4B,MAAA,KAAK,EAAE,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF;AAMD;;AACD,SAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AAGD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { NavigationHelpersContext } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport { Text, View, TouchableOpacity, ActivityIndicator } from \"react-native\"\nimport { logUserOut } from '../apollo';\nimport Saying from '../components/Saying';\nimport ScreenLayout from '../components/ScreenLayout';\n\n\nconst TODAY_QUERY = gql`\n  query seeSaying($id:Int!){\n    seeSaying(id:$id){\n      id\n      text \n      user{\n        name\n        email\n      }\n      author{\n        id\n        name\n      }\n      tags{\n        id\n        name\n      }\n      totalLikes\n      totalComments\n      isMine\n      isLike\n    }\n  }\n`\n\nexport default function Today({navigation}){\n  const { data, loading, error } = useQuery(TODAY_QUERY,{\n    variables:{\n      id: 1\n    }\n  });\n  if(error){\n    console.log(error);\n  }\n  if(data){\n    console.log(data);\n    return(\n      <ScreenLayout>\n\n        <Saying {...data.seeSaying} today={true}/>\n      </ScreenLayout>\n    )\n  }\n  return <ScreenLayout>\n    <ActivityIndicator color=\"white\"/>\n  </ScreenLayout>\n}"]},"metadata":{},"sourceType":"module"}