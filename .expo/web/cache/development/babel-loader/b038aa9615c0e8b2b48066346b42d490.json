{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _jsxFileName = \"/Users/ntommy/Projects/wisesaying/components/Saying.js\",\n    _templateObject;\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { createContext } from 'react';\nimport { useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport { useColorScheme } from 'react-native-appearance';\nimport styled from \"styled-components/native\";\nimport { Ionicons } from '@expo/vector-icons';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { useNavigation } from '@react-navigation/native';\nimport { colors } from \"../colors\";\nLogBox.ignoreAllLogs(['Non-serializable values were found in the navigation state']);\n\nfunction Tag(_ref) {\n  var id = _ref.id,\n      name = _ref.name;\n  return React.createElement(TouchableOpacity, {\n    style: ss.tagWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#464646\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, name));\n}\n\nfunction Today(_ref2) {\n  var darkmode = _ref2.darkmode;\n  return React.createElement(View, {\n    style: ss.today(darkmode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: darkmode ? \"#ababab\" : \"#787878\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"\\uC624\\uB298\\uC758 \\uB9D0\"));\n}\n\nvar TOGGLE_LIKE = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation toggleLike($id:Int!){\\n    toggleLike(id: $id){\\n      ok\\n      error \\n    }\\n  }\\n\"])));\nexport default function Saying(_ref3) {\n  var _this = this;\n\n  var id = _ref3.id,\n      user = _ref3.user,\n      text = _ref3.text,\n      tags = _ref3.tags,\n      author = _ref3.author,\n      isLike = _ref3.isLike,\n      isMine = _ref3.isMine,\n      totalLikes = _ref3.totalLikes,\n      totalComments = _ref3.totalComments,\n      today = _ref3.today,\n      refresh = _ref3.refresh;\n  console.log(refresh);\n  var textlen = text.length;\n  var fontSize = 0;\n\n  if (textlen < 50) {\n    fontSize = 18;\n  } else if (textlen < 100) {\n    fontSize = 16;\n  } else {\n    fontSize = 14;\n  }\n\n  console.log(\"textlen:\", textlen);\n  var sentences = text.split('.');\n  if (sentences[sentences.length - 1] == \"\") sentences.pop();\n  console.log(sentences);\n  console.log(id, text);\n  var navigation = useNavigation();\n  var colorScheme = useColorScheme();\n  var darkmode = colorScheme === \"dark\";\n  var textColor = colorScheme === \"dark\" ? \"#fff\" : \"#000\";\n\n  var _useMutation = useMutation(TOGGLE_LIKE, {\n    variables: {\n      id: id\n    },\n    update: function update(cache, _ref4) {\n      var ok = _ref4.data.toggleLike.ok;\n      console.log(\"ok=\", ok);\n\n      if (ok) {\n        var target = \"Saying:\" + id;\n        cache.modify({\n          id: target,\n          fields: {\n            isLike: function isLike(prev) {\n              return !prev;\n            },\n            totalLikes: function totalLikes(prev) {\n              if (isLike) return prev - 1;else return prev + 1;\n            }\n          }\n        });\n      }\n    },\n    onCompleted: function onCompleted(data) {\n      return console.log(data);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      toggleLike = _useMutation2[0];\n\n  return React.createElement(View, {\n    style: ss.container(colorScheme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, today ? React.createElement(Today, {\n    darkmode: darkmode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }) : null, React.createElement(TouchableOpacity, {\n    style: ss.body,\n    onPress: function onPress() {\n      return navigation.push(\"Saying\", {\n        sid: id,\n        refresh: refresh\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: ss.textWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, sentences.map(function (text, index) {\n    return React.createElement(Text, {\n      key: index,\n      style: ss.sayingText(colorScheme, fontSize),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }, text.trim(), \".\", \"\\n\");\n  })), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: ss.author(colorScheme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, author.name))), React.createElement(View, {\n    style: ss.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: ss.likes,\n    onPress: toggleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: isLike ? \"heart\" : \"heart-outline\",\n    size: 30,\n    color: isLike ? \"tomato\" : textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: textColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, totalLikes)), React.createElement(TouchableOpacity, {\n    style: ss.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chatbox-outline\",\n    size: 30,\n    color: textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: textColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, totalComments)), React.createElement(ScrollView, {\n    showsHorizontalScrollIndicator: false,\n    horizontal: true,\n    bounces: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, tags.map(function (item, index) {\n    return React.createElement(Tag, _extends({\n      key: index\n    }, item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 38\n      }\n    }));\n  }))));\n}\nvar ss = StyleSheet.create({\n  container: function container(colorScheme) {\n    return {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1,\n      borderWidth: 0,\n      borderColor: \"#dedede\",\n      backgroundColor: colorScheme === \"dark\" ? colors.darker : \"white\",\n      width: \"85%\",\n      borderRadius: 20,\n      marginVertical: 30,\n      maxHeight: 600,\n      minHeight: 350,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 1,\n        height: 2\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 3.84,\n      elevation: 5\n    };\n  },\n  body: {\n    flex: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  sayingText: function sayingText(colorScheme, fontSize) {\n    return {\n      color: \"\" + (colorScheme === \"dark\" ? \"white\" : \"black\"),\n      fontSize: fontSize\n    };\n  },\n  author: function author(colorScheme) {\n    return {\n      color: \"\" + (colorScheme === \"dark\" ? \"#ababab\" : \"#323232\"),\n      fontSize: 16\n    };\n  },\n  comment: {\n    marginLeft: 10,\n    marginRight: 10,\n    borderWidth: 0,\n    borderStyle: \"dashed\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  likes: {\n    borderWidth: 0,\n    borderStyle: \"dashed\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  tagWrapper: {\n    borderWidth: 0,\n    borderRadius: 15,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    marginLeft: 5,\n    marginBottom: 15,\n    backgroundColor: \"#eeeeee\"\n  },\n  footer: {\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    paddingVertical: 10\n  },\n  today: function today(darkmode) {\n    return {\n      borderRadius: 15,\n      backgroundColor: darkmode ? \"rgba(255,255,255,0.1)\" : \"#efefef\",\n      paddingVertical: 5,\n      paddingHorizontal: 10,\n      marginTop: 15\n    };\n  },\n  textWrapper: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 50,\n    paddingHorizontal: 20,\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/ntommy/Projects/wisesaying/components/Saying.js"],"names":["React","useState","createContext","useEffect","LogBox","useColorScheme","styled","Ionicons","gql","useMutation","useNavigation","colors","ignoreAllLogs","Tag","id","name","ss","tagWrapper","color","Today","darkmode","today","TOGGLE_LIKE","Saying","user","text","tags","author","isLike","isMine","totalLikes","totalComments","refresh","console","log","textlen","length","fontSize","sentences","split","pop","navigation","colorScheme","textColor","variables","update","cache","ok","data","toggleLike","target","modify","fields","prev","onCompleted","container","body","push","sid","textWrapper","map","index","sayingText","trim","footer","likes","comment","item","StyleSheet","create","alignItems","justifyContent","flex","borderWidth","borderColor","backgroundColor","darker","width","borderRadius","marginVertical","maxHeight","minHeight","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginLeft","marginRight","borderStyle","paddingVertical","paddingHorizontal","marginBottom","flexDirection","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { createContext } from 'react';\nimport { useEffect } from 'react';\nimport { Image, Text, useWindowDimensions, View, StyleSheet,TouchableOpacity, Platform, ScrollView, LogBox } from 'react-native';\nimport { useColorScheme } from 'react-native-appearance';\nimport styled from \"styled-components/native\";\nimport { Ionicons } from '@expo/vector-icons';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { useNavigation } from '@react-navigation/native';\nimport { colors } from '../colors';\n\nLogBox.ignoreAllLogs([\n  'Non-serializable values were found in the navigation state',\n]);\n\nfunction Tag({id, name}){\n  //console.log(id, name);\n  return (\n    <TouchableOpacity style={ss.tagWrapper}>\n      <Text style={{color:\"#464646\"}}>{name}</Text>\n    </TouchableOpacity>\n  )\n}\n\nfunction Today({darkmode}){\n  return(\n    <View style={ss.today(darkmode)}>\n      <Text style={{ color: darkmode?\"#ababab\":\"#787878\"}}>오늘의 말</Text>\n    </View>\n  )\n}\n\nconst TOGGLE_LIKE = gql`\n  mutation toggleLike($id:Int!){\n    toggleLike(id: $id){\n      ok\n      error \n    }\n  }\n`\n\n\nexport default function Saying({id, user, text, tags, author, isLike, isMine, totalLikes, totalComments, today, refresh}){\n  console.log(refresh);\n  // 텍스트 전처리\n  const textlen = text.length;\n  let fontSize = 0;\n  if (textlen < 50){\n    fontSize = 18;\n  }else if(textlen < 100){\n    fontSize = 16;\n  }else{\n    fontSize = 14;\n  }\n  console.log(\"textlen:\",textlen);\n  let sentences = text.split('.');\n  if(sentences[sentences.length-1]==\"\") sentences.pop();\n  \n  console.log(sentences);\n\n  console.log(id,text);\n  const navigation = useNavigation();\n  //const {id, user, text, tags, author, isLike, isMine, totalLikes, totalComments} = data.seeSaying;\n  //console.log(\"data:\",data)\n  const colorScheme = useColorScheme();\n  const darkmode = colorScheme===\"dark\";\n  const textColor = colorScheme===\"dark\"?\"#fff\":\"#000\";\n\n\n  const [toggleLike] = useMutation(TOGGLE_LIKE,{\n    variables:{\n      id,\n    },\n    update: (cache, { data:{toggleLike:{ok}}})=>{\n      console.log(\"ok=\",ok);\n      if(ok){\n        const target = `Saying:${id}`; // 수정할 대상을 지정\n        cache.modify({\n          id: target,\n          fields:{\n            isLike(prev){\n              return !prev;\n            },\n            totalLikes(prev){\n              if (isLike) return prev-1;\n              else return prev+1;\n            },\n          },\n        });\n      }\n    },\n    onCompleted:(data)=>console.log(data),\n  });\n  return(\n    <View style={ss.container(colorScheme)}>\n      {\n        today?<Today darkmode={darkmode}/>:null \n      }\n      <TouchableOpacity style={ss.body} onPress={()=>navigation.push(\"Saying\",{\n        sid: id,\n        refresh,\n      })}>\n        <View style={ss.textWrapper}>\n          {\n            sentences.map((text,index)=><Text key={index} style={ss.sayingText(colorScheme,fontSize)}>{text.trim()}.{\"\\n\"}</Text>)\n          }\n        </View>\n        <TouchableOpacity>\n          <Text style={ss.author(colorScheme)}>{author.name}</Text>\n        </TouchableOpacity>\n      </TouchableOpacity>\n      <View style={ss.footer}>\n          <TouchableOpacity style={ss.likes} onPress={toggleLike}>\n            <Ionicons \n              name={isLike?\"heart\":\"heart-outline\" }\n              size={30} \n              color={isLike?\"tomato\":textColor}/>\n            <Text style={{\n              color:textColor\n            }}>{totalLikes}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={ss.comment}>\n            <Ionicons name=\"chatbox-outline\" size={30} color={textColor}/>\n            <Text style={{\n              color:textColor\n            }}>{totalComments}</Text>\n          </TouchableOpacity>\n          <ScrollView showsHorizontalScrollIndicator={false} horizontal={true} bounces={true}>\n            {\n              tags.map((item,index)=><Tag key={index} {...item}/>)\n            }\n          </ScrollView>\n        </View>\n    </View>\n  )\n}\n\nconst ss = StyleSheet.create({\n  container: colorScheme=>({\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    flex: 1,\n    borderWidth: 0,\n    borderColor: \"#dedede\",\n    backgroundColor: colorScheme===\"dark\"?colors.darker:\"white\",\n    width: \"85%\",\n    borderRadius: 20,\n    marginVertical: 30,\n    maxHeight: 600,\n    minHeight: 350,\n    shadowColor:\"#000\",\n    shadowOffset:{\n      width:1, \n      height: 2,\n    },\n    shadowOpacity:0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    /*...Platform.select({\n      ios: {\n        shadowColor: '#000',\n        shadowOffset: {width:2, height: -1},\n        shadowOpacity: 0.3,\n      },\n      android:{\n        elevation: 1\n      }\n    }),*/\n  }),\n  body:{\n    flex:8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  sayingText:(colorScheme,fontSize)=>({\n    color: `${colorScheme===\"dark\"?\"white\":\"black\"}`,\n    fontSize: fontSize,\n  }),\n  author: colorScheme=>({\n    color: `${colorScheme===\"dark\"?\"#ababab\":\"#323232\"}`\t,\n    fontSize: 16,\n  }),\n  comment:{\n    marginLeft: 10,\n    marginRight: 10,\n    borderWidth: 0,\n    borderStyle: \"dashed\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  likes:{\n    borderWidth: 0,\n    borderStyle: \"dashed\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  tagWrapper:{\n    borderWidth: 0,\n    borderRadius: 15,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    marginLeft: 5,\n    marginBottom: 15,\n    backgroundColor: \"#eeeeee\",\n  },\n  footer:{\n    alignItems:\"center\",\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    paddingVertical: 10,\n  },\n  today: darkmode =>({\n    borderRadius:15, \n    backgroundColor: darkmode?\"rgba(255,255,255,0.1)\":\"#efefef\",\n    paddingVertical:5, \n    paddingHorizontal:10, \n    marginTop:15,\n  }),\n  textWrapper:{\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    paddingVertical: 50, \n    paddingHorizontal:20,\n    width:\"100%\"\n  }\n})"]},"metadata":{},"sourceType":"module"}