{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;\n\nimport gql from 'graphql-tag';\nexport var SEARCH_TAG = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query searchTag($keyword: String!, $take: Int!, $lastId:Int){\\n    searchTag(keword: $keyword, take: $take, lastId:$lastId){\\n      id\\n      name\\n      totalSayings\\n    }\\n  }\\n\"])));\nexport var SEARCH_AUTHOR = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  query searchAuthor($keyword: String!, $take: Int!, $lastId: Int){\\n    searchAuthor(keyword: $keyword, take:$take, lastId:$lastId){\\n      id\\n      name\\n      totalSayings\\n    }\\n  }\\n\"])));\nexport var SEARCH_CONTENT = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  query searchSaying($keyword: String!, $take: Int!, $lastId: Int){\\n    searchSaying(keyword: $keyword, take:$take, lastId:$lastId){\\n      id\\n      user{\\n        id\\n        name\\n        email\\n      }\\n      author{\\n        id\\n        name\\n      }\\n      text \\n      tags{\\n        id\\n        name \\n      }\\n      totalLikes\\n      totalComments\\n      isMine\\n      isLike\\n    }\\n  }\\n\"])));\nexport var SEE_USER_CREATE = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  query seeUserSaying($userId:Int!, $take:Int!, $lastId:Int){\\n    seeUserSaying(id:$userId, take:$take, lastId:$lastId){\\n      id\\n      user{\\n        id\\n        name\\n        email\\n      }\\n      author{\\n        id\\n        name\\n      }\\n      text \\n      tags{\\n        id\\n        name \\n      }\\n      totalLikes\\n      totalComments\\n      isMine\\n      isLike  \\n    }\\n  }\\n\"])));\nexport var SEE_USER_LIKE = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  query seeUserLike($userId:Int!, $take:Int!, $lastId:Int){\\n    seeUserLike(userId:$userId, take:$take, lastId:$lastId){\\n      id\\n      user{\\n        id\\n        name\\n        email\\n      }\\n      author{\\n        id\\n        name\\n      }\\n      text \\n      tags{\\n        id\\n        name \\n      }\\n      totalLikes\\n      totalComments\\n      isMine\\n      isLike \\n    }\\n  }\\n\"])));\nexport var SEE_TAG_SAYING = gql(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  query seeTagSaying($id: Int!, $take: Int!, $lastId:Int){\\n    seeTagSaying(id:$id, take:$take, lastId:$lastId){\\n      id\\n      user{\\n        id\\n        name\\n        email\\n      }\\n      author{\\n        id\\n        name\\n      }\\n      text \\n      tags{\\n        id\\n        name \\n      }\\n      totalLikes\\n      totalComments\\n      isMine\\n      isLike\\n    }\\n  }\\n\\n\"])));\nexport var SEE_AUTHOR_SAYING = gql(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  query seeAuthorSaying($id: Int!, $take: Int!, $lastId:Int){\\n    seeAuthorSaying(id: $id, take: $take, lastId:$lastId){\\n      id\\n      user{\\n        id\\n        name\\n        email\\n      }\\n      author{\\n        id\\n        name\\n      }\\n      text \\n      tags{\\n        id\\n        name \\n      }\\n      totalLikes\\n      totalComments\\n      isMine\\n      isLike\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/Users/ntommy/Projects/wisesaying/queries.js"],"names":["gql","SEARCH_TAG","SEARCH_AUTHOR","SEARCH_CONTENT","SEE_USER_CREATE","SEE_USER_LIKE","SEE_TAG_SAYING","SEE_AUTHOR_SAYING"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAGA,OAAO,IAAMC,UAAU,GAAGD,GAAH,kQAAhB;AASP,OAAO,IAAME,aAAa,GAAGF,GAAH,2QAAnB;AASP,OAAO,IAAMG,cAAc,GAAGH,GAAH,6dAApB;AA2BP,OAAO,IAAMI,eAAe,GAAGJ,GAAH,mdAArB;AA0BP,OAAO,IAAMK,aAAa,GAAGL,GAAH,kdAAnB;AA0BP,OAAO,IAAMM,cAAc,GAAGN,GAAH,2cAApB;AA2BP,OAAO,IAAMO,iBAAiB,GAAGP,GAAH,idAAvB","sourcesContent":["import gql from 'graphql-tag';\n\n\nexport const SEARCH_TAG = gql`\n  query searchTag($keyword: String!, $take: Int!, $lastId:Int){\n    searchTag(keword: $keyword, take: $take, lastId:$lastId){\n      id\n      name\n      totalSayings\n    }\n  }\n`\nexport const SEARCH_AUTHOR = gql`\n  query searchAuthor($keyword: String!, $take: Int!, $lastId: Int){\n    searchAuthor(keyword: $keyword, take:$take, lastId:$lastId){\n      id\n      name\n      totalSayings\n    }\n  }\n`\nexport const SEARCH_CONTENT = gql`\n  query searchSaying($keyword: String!, $take: Int!, $lastId: Int){\n    searchSaying(keyword: $keyword, take:$take, lastId:$lastId){\n      id\n      user{\n        id\n        name\n        email\n      }\n      author{\n        id\n        name\n      }\n      text \n      tags{\n        id\n        name \n      }\n      totalLikes\n      totalComments\n      isMine\n      isLike\n    }\n  }\n`\n\n// 유저가 작성한 글귀 목록\nexport const SEE_USER_CREATE = gql`\n  query seeUserSaying($userId:Int!, $take:Int!, $lastId:Int){\n    seeUserSaying(id:$userId, take:$take, lastId:$lastId){\n      id\n      user{\n        id\n        name\n        email\n      }\n      author{\n        id\n        name\n      }\n      text \n      tags{\n        id\n        name \n      }\n      totalLikes\n      totalComments\n      isMine\n      isLike  \n    }\n  }\n`\n// 유저가 찜한 글귀 목록 \nexport const SEE_USER_LIKE = gql`\n  query seeUserLike($userId:Int!, $take:Int!, $lastId:Int){\n    seeUserLike(userId:$userId, take:$take, lastId:$lastId){\n      id\n      user{\n        id\n        name\n        email\n      }\n      author{\n        id\n        name\n      }\n      text \n      tags{\n        id\n        name \n      }\n      totalLikes\n      totalComments\n      isMine\n      isLike \n    }\n  }\n`\n\nexport const SEE_TAG_SAYING = gql`\n  query seeTagSaying($id: Int!, $take: Int!, $lastId:Int){\n    seeTagSaying(id:$id, take:$take, lastId:$lastId){\n      id\n      user{\n        id\n        name\n        email\n      }\n      author{\n        id\n        name\n      }\n      text \n      tags{\n        id\n        name \n      }\n      totalLikes\n      totalComments\n      isMine\n      isLike\n    }\n  }\n\n`\n\nexport const SEE_AUTHOR_SAYING = gql`\n  query seeAuthorSaying($id: Int!, $take: Int!, $lastId:Int){\n    seeAuthorSaying(id: $id, take: $take, lastId:$lastId){\n      id\n      user{\n        id\n        name\n        email\n      }\n      author{\n        id\n        name\n      }\n      text \n      tags{\n        id\n        name \n      }\n      totalLikes\n      totalComments\n      isMine\n      isLike\n    }\n  }\n`"]},"metadata":{},"sourceType":"module"}