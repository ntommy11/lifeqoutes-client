{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/ntommy/Projects/wisesaying/screens/SayingList.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useColorScheme } from 'react-native-appearance';\nimport Saying from \"../components/Saying\";\nimport ScreenLayout from \"../components/ScreenLayout\";\nimport { colors } from \"../colors\";\nimport { SEE_USER_CREATE, SEE_USER_LIKE, SEE_TAG_SAYING, SEE_AUTHOR_SAYING } from \"../queries\";\nvar TAKE = 10;\nLogBox.ignoreAllLogs(['Non-serializable values were found in the navigation state']);\n\nfunction SayingByUserCreate(_ref) {\n  var _this = this;\n\n  var userId = _ref.userId;\n  console.log(\"userId=\", userId);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(ScreenLayout, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, React.createElement(Saying, _extends({}, item, {\n      refresh: refresh,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var refresh = function refresh() {\n    return _regeneratorRuntime.async(function refresh$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setRefreshing(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(refetch());\n\n          case 3:\n            setRefreshing(false);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useQuery = useQuery(SEE_USER_CREATE, {\n    variables: {\n      userId: userId,\n      take: TAKE\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch,\n      fetchMore = _useQuery.fetchMore;\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data) {\n    var len = data.seeUserSaying.length;\n\n    if (len) {\n      var lastId = data.seeUserSaying[len - 1].id;\n      return React.createElement(SafeAreaView, {\n        style: {\n          width: \"100%\",\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        refreshing: refreshing,\n        onRefresh: refresh,\n        onEndReached: function onEndReached() {\n          return fetchMore({\n            variables: {\n              userId: userId,\n              take: TAKE,\n              lastId: lastId\n            }\n          });\n        },\n        style: {\n          paddingTop: 10,\n          flex: 1\n        },\n        data: data.seeUserSaying,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  return React.createElement(ScreenLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }, React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 24\n    }\n  }));\n}\n\nfunction SayingsByUserLike(_ref3) {\n  var _this2 = this;\n\n  var userId = _ref3.userId;\n  console.log(\"userId=\", userId);\n\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item;\n    return React.createElement(ScreenLayout, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, React.createElement(Saying, _extends({}, item, {\n      refresh: refresh,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var refresh = function refresh() {\n    return _regeneratorRuntime.async(function refresh$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setRefreshing(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(refetch());\n\n          case 3:\n            setRefreshing(false);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useQuery2 = useQuery(SEE_USER_LIKE, {\n    variables: {\n      userId: userId,\n      take: TAKE\n    }\n  }),\n      data = _useQuery2.data,\n      loading = _useQuery2.loading,\n      error = _useQuery2.error,\n      refetch = _useQuery2.refetch,\n      fetchMore = _useQuery2.fetchMore;\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data) {\n    var len = data.seeUserLike.length;\n\n    if (len) {\n      var lastId = data.seeUserLike[len - 1].id;\n      return React.createElement(SafeAreaView, {\n        style: {\n          width: \"100%\",\n          flex: 1,\n          paddingTop: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        refreshing: refreshing,\n        onRefresh: refresh,\n        onEndReached: function onEndReached() {\n          return fetchMore({\n            variables: {\n              userId: userId,\n              take: TAKE,\n              lastId: lastId\n            }\n          });\n        },\n        style: {\n          paddingTop: 10,\n          flex: 1\n        },\n        data: data.seeUserLike,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  return React.createElement(ScreenLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 10\n    }\n  }, React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 24\n    }\n  }));\n}\n\nfunction SayingsByTag(_ref5) {\n  var _this3 = this;\n\n  var id = _ref5.id;\n\n  var renderItem = function renderItem(_ref6) {\n    var item = _ref6.item;\n    return React.createElement(ScreenLayout, {\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, React.createElement(Saying, _extends({}, item, {\n      refresh: refresh,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refreshing = _useState6[0],\n      setRefreshing = _useState6[1];\n\n  var refresh = function refresh() {\n    return _regeneratorRuntime.async(function refresh$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setRefreshing(true);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(refetch());\n\n          case 3:\n            setRefreshing(false);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useQuery3 = useQuery(SEE_TAG_SAYING, {\n    variables: {\n      id: id,\n      take: TAKE\n    }\n  }),\n      data = _useQuery3.data,\n      loading = _useQuery3.loading,\n      error = _useQuery3.error,\n      refetch = _useQuery3.refetch,\n      fetchMore = _useQuery3.fetchMore;\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data) {\n    var len = data.seeTagSaying.length;\n\n    if (len) {\n      var lastId = data.seeTagSaying[len - 1].id;\n      return React.createElement(SafeAreaView, {\n        style: {\n          flex: 1,\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        refreshing: refreshing,\n        onRefresh: refresh,\n        onEndReached: function onEndReached() {\n          return fetchMore({\n            variables: {\n              id: id,\n              take: TAKE,\n              lastId: lastId\n            }\n          });\n        },\n        style: {\n          flex: 1\n        },\n        data: data.seeTagSaying,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  return React.createElement(ScreenLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 10\n    }\n  }, React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 24\n    }\n  }));\n}\n\nfunction SayingsByAuthor(_ref7) {\n  var _this4 = this;\n\n  var id = _ref7.id;\n\n  var renderItem = function renderItem(_ref8) {\n    var item = _ref8.item;\n    return React.createElement(ScreenLayout, {\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }\n    }, React.createElement(Saying, _extends({}, item, {\n      refresh: refresh,\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      refreshing = _useState8[0],\n      setRefreshing = _useState8[1];\n\n  var refresh = function refresh() {\n    return _regeneratorRuntime.async(function refresh$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setRefreshing(true);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(refetch());\n\n          case 3:\n            setRefreshing(false);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useQuery4 = useQuery(SEE_AUTHOR_SAYING, {\n    variables: {\n      id: id,\n      take: TAKE\n    }\n  }),\n      data = _useQuery4.data,\n      loading = _useQuery4.loading,\n      error = _useQuery4.error,\n      refetch = _useQuery4.refetch,\n      fetchMore = _useQuery4.fetchMore;\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data) {\n    var len = data.seeAuthorSaying.length;\n\n    if (len) {\n      var lastId = data.seeAuthorSaying[len - 1].id;\n      return React.createElement(SafeAreaView, {\n        style: {\n          width: \"100%\",\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }, React.createElement(FlatList, {\n        refreshing: refreshing,\n        onRefresh: refresh,\n        onEndReachedThreshold: 0,\n        onEndReached: function onEndReached() {\n          return fetchMore({\n            variables: {\n              id: id,\n              take: TAKE,\n              lastId: lastId\n            }\n          });\n        },\n        style: {\n          flex: 1\n        },\n        data: data.seeAuthorSaying,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  return React.createElement(ScreenLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 10\n    }\n  }, React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 24\n    }\n  }));\n}\n\nexport default function SayingList(_ref9) {\n  var navigation = _ref9.navigation,\n      route = _ref9.route;\n  var _route$params = route.params,\n      id = _route$params.id,\n      keyword = _route$params.keyword,\n      type = _route$params.type;\n  console.log(id, keyword, type);\n  var colorScheme = useColorScheme();\n  var darkmode = colorScheme === \"dark\";\n  useEffect(function () {\n    navigation.setOptions({\n      title: keyword,\n      headerStyle: {\n        shadowColor: 'transparent',\n        backgroundColor: darkmode ? colors.darker : \"white\"\n      }\n    });\n  });\n\n  switch (type) {\n    case \"userCreate\":\n      return React.createElement(ScreenLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 7\n        }\n      }, React.createElement(SayingByUserCreate, {\n        userId: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }\n      }));\n      break;\n\n    case \"userLike\":\n      return React.createElement(ScreenLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 7\n        }\n      }, React.createElement(SayingsByUserLike, {\n        userId: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }\n      }));\n      break;\n\n    case \"tag\":\n      return React.createElement(ScreenLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 7\n        }\n      }, React.createElement(SayingsByTag, {\n        id: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }\n      }));\n      break;\n\n    case \"author\":\n      return React.createElement(ScreenLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 7\n        }\n      }, React.createElement(SayingsByAuthor, {\n        id: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 9\n        }\n      }));\n      break;\n\n    default:\n      return React.createElement(ScreenLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 7\n        }\n      }, React.createElement(ActivityIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 9\n        }\n      }));\n  }\n}","map":{"version":3,"sources":["/Users/ntommy/Projects/wisesaying/screens/SayingList.js"],"names":["useQuery","gql","React","useEffect","useState","LogBox","useColorScheme","Saying","ScreenLayout","colors","SEE_USER_CREATE","SEE_USER_LIKE","SEE_TAG_SAYING","SEE_AUTHOR_SAYING","TAKE","ignoreAllLogs","SayingByUserCreate","userId","console","log","renderItem","item","refresh","refreshing","setRefreshing","refetch","variables","take","data","loading","error","fetchMore","len","seeUserSaying","length","lastId","id","width","flex","paddingTop","toString","SayingsByUserLike","seeUserLike","SayingsByTag","seeTagSaying","SayingsByAuthor","seeAuthorSaying","SayingList","navigation","route","params","keyword","type","colorScheme","darkmode","setOptions","title","headerStyle","shadowColor","backgroundColor","darker"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ActivityIndicator, Alert, FlatList, LogBox, SafeAreaView, Text, View } from 'react-native';\nimport { useColorScheme } from 'react-native-appearance';\nimport Saying from '../components/Saying';\nimport ScreenLayout from '../components/ScreenLayout';\nimport {colors} from '../colors'\nimport { SEE_USER_CREATE, SEE_USER_LIKE, SEE_TAG_SAYING, SEE_AUTHOR_SAYING} from '../queries'\nconst TAKE = 10\n\nLogBox.ignoreAllLogs([\n  'Non-serializable values were found in the navigation state',\n]);\n\nfunction SayingByUserCreate({userId}){\n  console.log(\"userId=\",userId);\n  const renderItem = ({item})=>{\n    //console.log(\"item:\",item);\n    return(\n      <ScreenLayout>\n        <Saying {...item} refresh={refresh}/>\n      </ScreenLayout> \n    )\n  }\n  const [refreshing, setRefreshing] = useState(false);\n  const refresh = async ()=>{\n    setRefreshing(true);\n    await refetch();\n    setRefreshing(false);\n  }\n  const {data,loading,error,refetch,fetchMore} = useQuery(SEE_USER_CREATE,{\n    variables:{\n      userId: userId,\n      take: TAKE\n    }\n  });\n  if(error){\n    console.log(error);\n  }\n  if(data){\n    //console.log(\"SayingsByTag::data=\",data);\n    let len = data.seeUserSaying.length;\n    if(len){\n      let lastId = data.seeUserSaying[len-1].id;\n      return(\n        <SafeAreaView style={{width:\"100%\", flex:1}}>\n          <FlatList\n            refreshing={refreshing}\n            onRefresh={refresh}\n            onEndReached={()=>fetchMore({\n            variables:{\n              userId: userId,\n              take: TAKE,\n              lastId: lastId\n            },/*\n            updateQuery: (prev, {fetchMoreResult})=>{\n              console.log(\"fetchmore:\",fetchMoreResult);\n              if (!fetchMoreResult) return prev;\n              return Object.assign({},prev,{\n                seeTag: {\n                  sayings: [...prev.seeTag.sayings, ...fetchMoreResult.seeTag.sayings],\n                }\n              })\n            }*/\n            })}        \n            style={{\n              paddingTop: 10,\n              flex: 1,\n            }}\n            data={data.seeUserSaying}\n            renderItem={renderItem}\n            keyExtractor={item => item.id.toString()}\n          />\n        </SafeAreaView>\n      )\n    }else{\n      return <View></View>\n    }\n  }\n  return <ScreenLayout><ActivityIndicator/></ScreenLayout>\n}\n\nfunction SayingsByUserLike({userId}){\n  console.log(\"userId=\",userId);\n  const renderItem = ({item})=>{\n    //console.log(\"item:\",item);\n    return(\n      <ScreenLayout>\n        <Saying {...item} refresh={refresh}/>\n      </ScreenLayout> \n    )\n  }\n  const [refreshing, setRefreshing] = useState(false);\n  const refresh = async ()=>{\n    setRefreshing(true);\n    await refetch();\n    setRefreshing(false);\n  }\n  const {data,loading,error,refetch,fetchMore} = useQuery(SEE_USER_LIKE,{\n    variables:{\n      userId: userId,\n      take: TAKE\n    }\n  });\n  if(error){\n    console.log(error);\n  }\n  if(data){\n    //console.log(\"SayingsByTag::data=\",data);\n    let len = data.seeUserLike.length;\n    if(len){\n      let lastId = data.seeUserLike[len-1].id;\n      return(\n        <SafeAreaView style={{width:\"100%\", flex:1, paddingTop: 0}}>\n          <FlatList\n            refreshing={refreshing}\n            onRefresh={refresh}\n            onEndReached={()=>fetchMore({\n            variables:{\n              userId: userId,\n              take: TAKE,\n              lastId: lastId\n            },/*\n            updateQuery: (prev, {fetchMoreResult})=>{\n              console.log(\"fetchmore:\",fetchMoreResult);\n              if (!fetchMoreResult) return prev;\n              return Object.assign({},prev,{\n                seeTag: {\n                  sayings: [...prev.seeTag.sayings, ...fetchMoreResult.seeTag.sayings],\n                }\n              })\n            }*/\n            })}        \n            style={{\n              paddingTop: 10,\n              flex: 1,\n            }}\n            data={data.seeUserLike}\n            renderItem={renderItem}\n            keyExtractor={item => item.id.toString()}\n          />\n        </SafeAreaView>\n      )\n    }else{\n      return <View></View>\n    }\n  }\n  return <ScreenLayout><ActivityIndicator/></ScreenLayout>\n}\n\nfunction SayingsByTag({id}){\n  const renderItem = ({item})=>{\n    //console.log(\"item:\",item);\n    return(\n      <ScreenLayout>\n        <Saying {...item} refresh={refresh}/>\n      </ScreenLayout> \n    )\n  }\n  const [refreshing, setRefreshing] = useState(false);\n  const refresh = async ()=>{\n    setRefreshing(true);\n    await refetch();\n    setRefreshing(false);\n  }\n  const {data,loading,error,refetch,fetchMore} = useQuery(SEE_TAG_SAYING,{\n    variables:{\n      id: id,\n      take: TAKE\n    }\n  });\n  if(error){\n    console.log(error);\n  }\n  if(data){\n    //console.log(\"SayingsByTag::data=\",data);\n    let len = data.seeTagSaying.length;\n    if(len){\n      let lastId = data.seeTagSaying[len-1].id;\n      return(\n        <SafeAreaView style={{flex:1,width:\"100%\"}}>\n          <FlatList\n            refreshing={refreshing}\n            onRefresh={refresh}\n            onEndReached={()=>fetchMore({\n            variables:{\n              id: id,\n              take: TAKE,\n              lastId: lastId\n            },/*\n            updateQuery: (prev, {fetchMoreResult})=>{\n              console.log(\"fetchmore:\",fetchMoreResult);\n              if (!fetchMoreResult) return prev;\n              return Object.assign({},prev,{\n                seeTag: {\n                  sayings: [...prev.seeTag.sayings, ...fetchMoreResult.seeTag.sayings],\n                }\n              })\n            }*/\n            })}        \n            style={{\n              flex: 1,\n            }}\n            data={data.seeTagSaying}\n            renderItem={renderItem}\n            keyExtractor={item => item.id.toString()}\n          />\n        </SafeAreaView>\n      )\n    }else{\n      return <View></View>\n    }\n  }\n  return <ScreenLayout><ActivityIndicator/></ScreenLayout>\n}\n\nfunction SayingsByAuthor({id}){\n  const renderItem = ({item})=>{\n    //console.log(\"item:\",item);\n    return(\n      <ScreenLayout>\n        <Saying {...item} refresh={refresh}/>\n      </ScreenLayout> \n    )\n  }\n  const [refreshing, setRefreshing] = useState(false);\n  const refresh = async ()=>{\n    setRefreshing(true);\n    await refetch();\n    setRefreshing(false);\n  }\n  const {data,loading,error,refetch,fetchMore} = useQuery(SEE_AUTHOR_SAYING,{\n    variables:{\n      id: id,\n      take: TAKE\n    }\n  });\n  if(error){\n    console.log(error);\n  }\n  if(data){\n    //console.log(\"SayingsByAuthor::data=\",data);\n    let len = data.seeAuthorSaying.length;\n    if(len){\n      let lastId = data.seeAuthorSaying[len-1].id;\n      return(\n        <SafeAreaView style={{width:\"100%\", flex:1}}>\n          <FlatList\n            refreshing={refreshing}\n            onRefresh={refresh}\n            onEndReachedThreshold={0}\n            onEndReached={()=>fetchMore({\n              variables:{\n                id: id,\n                take: TAKE,\n                lastId: lastId\n              }\n            })}\n            \n            style={{\n              flex: 1,\n            }}\n            data={data.seeAuthorSaying}\n            renderItem={renderItem}\n            keyExtractor={item => item.id.toString()}\n          />\n        </SafeAreaView>\n      )\n    }else{\n      return <View></View>\n    }\n  }\n  return <ScreenLayout><ActivityIndicator/></ScreenLayout>\n}\n\n\nexport default function SayingList({navigation, route}){\n  const {id, keyword, type} = route.params;\n  console.log(id,keyword,type);\n  const colorScheme = useColorScheme();\n  const darkmode = colorScheme===\"dark\";\n  useEffect(()=>{\n    navigation.setOptions({\n      title: keyword,\n      headerStyle:{\n        shadowColor:'transparent',\n        backgroundColor: darkmode?colors.darker:\"white\",\n      }\n    });\n  });\n  //console.log(navigation, id,keyword,type);\n  switch(type){\n    case \"userCreate\": return(\n      <ScreenLayout>\n        <SayingByUserCreate userId={id}/>\n      </ScreenLayout>\n    ); break;\n    case \"userLike\": return(\n      <ScreenLayout>\n        <SayingsByUserLike userId={id} />\n      </ScreenLayout>\n    ); break;\n    case \"tag\": return(\n      <ScreenLayout>\n        <SayingsByTag id={id}/>\n      </ScreenLayout>\n    ); break;\n    case \"author\": return(\n      <ScreenLayout>\n        <SayingsByAuthor id={id}/>\n      </ScreenLayout>\n    ); break;\n    default: return(\n      <ScreenLayout>\n        <ActivityIndicator/>\n      </ScreenLayout>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}