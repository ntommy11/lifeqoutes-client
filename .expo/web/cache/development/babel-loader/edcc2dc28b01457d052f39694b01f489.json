{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _jsxFileName = \"/Users/ntommy/Projects/wisesaying/screens/CreateAccount.js\";\n\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport { useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styled from \"styled-components/native\";\nimport AuthButton from \"../components/auth/AuthButton\";\nimport AuthLayout from \"../components/auth/AuthLayout\";\nimport { TextInput } from \"../components/auth/AuthShared\";\nvar CREATE_ACCOUNT_MUTATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation createAccount(\\n    $username: String!,\\n    $email: String!,\\n    $password: String!\\n  ){\\n    createAccount(\\n      name: $username\\n      email: $email\\n      password: $password\\n    ){\\n      ok\\n      error\\n    }\\n  }\\n\"])));\nexport default function CreateAccount(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      setValue = _useForm.setValue,\n      getValues = _useForm.getValues,\n      watch = _useForm.watch;\n\n  var onCompleted = function onCompleted(data) {\n    console.log(data);\n    var ok = data.createAccount.ok;\n\n    var _getValues = getValues(),\n        email = _getValues.email,\n        password = _getValues.password;\n\n    if (ok) {\n      navigation.navigate(\"Login\", {\n        email: email,\n        password: password\n      });\n    }\n  };\n\n  var _useMutation = useMutation(CREATE_ACCOUNT_MUTATION, {\n    onCompleted: onCompleted\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createAccountMutation = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var usernameRef = useRef();\n  var emailRef = useRef();\n  var passwordRef = useRef();\n  var refs = new Array(5);\n  refs.fill(new useRef());\n\n  var onNext = function onNext(next) {\n    var _next$current;\n\n    next == null ? void 0 : (_next$current = next.current) == null ? void 0 : _next$current.focus();\n  };\n\n  var onValid = function onValid(data) {\n    console.log(data);\n\n    if (!loading) {\n      createAccountMutation({\n        variables: {\n          username: data.username,\n          email: data.email,\n          password: data.password\n        }\n      });\n    }\n  };\n\n  useEffect(function () {\n    register(\"username\", {\n      required: true\n    });\n    register(\"email\", {\n      required: true\n    });\n    register(\"password\", {\n      required: true\n    });\n  }, [register]);\n  return React.createElement(AuthLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    ref: usernameRef,\n    placeholder: \"\\uC774\\uB984\",\n    placeholderTextColor: \"gray\",\n    returnKeyType: \"next\",\n    autoCapitalize: \"none\",\n    onSubmitEditing: function onSubmitEditing() {\n      return onNext(emailRef);\n    },\n    onChangeText: function onChangeText(text) {\n      return setValue(\"username\", text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    ref: emailRef,\n    placeholder: \"\\uC774\\uBA54\\uC77C\",\n    placeholderTextColor: \"gray\",\n    returnKeyType: \"next\",\n    autoCapitalize: \"none\",\n    onSubmitEditing: function onSubmitEditing() {\n      return onNext(passwordRef);\n    },\n    onChangeText: function onChangeText(text) {\n      return setValue(\"email\", text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    ref: passwordRef,\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    placeholderTextColor: \"gray\",\n    returnKeyType: \"next\",\n    autoCapitalize: \"none\",\n    onSubmitEditing: handleSubmit(onValid),\n    lastOne: true,\n    onChangeText: function onChangeText(text) {\n      return setValue(\"password\", text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthButton, {\n    text: \"\\uACC4\\uC815 \\uB9CC\\uB4E4\\uAE30\",\n    disabled: !watch(\"email\") || !watch(\"password\") || !watch(\"username\"),\n    onPress: handleSubmit(onValid),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ntommy/Projects/wisesaying/screens/CreateAccount.js"],"names":["useMutation","gql","React","useRef","useEffect","useForm","styled","AuthButton","AuthLayout","TextInput","CREATE_ACCOUNT_MUTATION","CreateAccount","navigation","register","handleSubmit","setValue","getValues","watch","onCompleted","data","console","log","ok","createAccount","email","password","navigate","createAccountMutation","loading","usernameRef","emailRef","passwordRef","refs","Array","fill","onNext","next","current","focus","onValid","variables","username","required","text"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport { useRef,useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { View,Text, KeyboardAvoidingView, Platform } from 'react-native';\nimport styled from \"styled-components/native\";\nimport AuthButton from '../components/auth/AuthButton';\nimport AuthLayout from '../components/auth/AuthLayout';\nimport {TextInput} from '../components/auth/AuthShared'\n\nconst CREATE_ACCOUNT_MUTATION = gql`\n  mutation createAccount(\n    $username: String!,\n    $email: String!,\n    $password: String!\n  ){\n    createAccount(\n      name: $username\n      email: $email\n      password: $password\n    ){\n      ok\n      error\n    }\n  }\n`;\n\nexport default function CreateAccount({navigation}){\n  const {register, handleSubmit, setValue, getValues, watch} = useForm();\n\n  const onCompleted = (data)=>{\n    console.log(data);\n    const {createAccount:{ok}} = data; // UNZIP data\n    const {email, password} = getValues();\n    if(ok){\n      navigation.navigate(\"Login\",{\n        email:email,\n        password:password,\n      });\n    }\n  }\n\n  const [createAccountMutation, {loading}] = useMutation(CREATE_ACCOUNT_MUTATION,{\n    onCompleted,\n  });\n  \n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const refs = new Array(5)\n  refs.fill(new useRef())\n\n  const onNext = (next)=>{\n    next?.current?.focus(); \n  }\n  const onValid = (data)=>{\n    console.log(data);\n    if(!loading){\n      createAccountMutation({\n        variables:{\n          username:data.username,\n          email:data.email,\n          password:data.password,\n        }\n      })\n    }\n  }\n\n  useEffect(()=>{\n    register(\"username\",{\n      required: true,\n    });\n    register(\"email\",{\n      required: true,\n    });\n    register(\"password\",{\n      required: true,\n    });\n  },[register])\n  return(\n    <AuthLayout>\n        <TextInput \n          ref = {usernameRef}\n          placeholder=\"이름\"\n          placeholderTextColor=\"gray\"\n          returnKeyType=\"next\"\n          autoCapitalize={\"none\"}\n          onSubmitEditing={()=>onNext(emailRef)}\n          onChangeText={(text)=>setValue(\"username\",text)}\n        />\n        <TextInput\n          ref = {emailRef} \n          placeholder=\"이메일\"\n          placeholderTextColor=\"gray\"\n          returnKeyType=\"next\"\n          autoCapitalize={\"none\"}\n          onSubmitEditing={()=>onNext(passwordRef)}\n          onChangeText={(text)=>setValue(\"email\",text)}\n        />\n        <TextInput \n          ref={passwordRef}\n          placeholder=\"비밀번호\"\n          placeholderTextColor=\"gray\"\n          returnKeyType=\"next\"\n          autoCapitalize={\"none\"}\n          onSubmitEditing={handleSubmit(onValid)}\n          lastOne={true}\n          onChangeText={(text)=>setValue(\"password\",text)}\n        />\n        <AuthButton text=\"계정 만들기\" disabled={!watch(\"email\")||!watch(\"password\")||!watch(\"username\")} onPress={handleSubmit(onValid)} />\n    </AuthLayout>\n  )\n}"]},"metadata":{},"sourceType":"module"}